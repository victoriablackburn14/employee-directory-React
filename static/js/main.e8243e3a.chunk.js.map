{"version":3,"sources":["components/DataBody.js","components/DataTable.js","components/SearchBox.js","components/Nav.js","utils/API.js","components/DataArea.js","components/Main.js","components/Wrapper.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["userData","users","formatDate","date","dateArray","split","year","join","undefined","name","map","userName","picture","phone","email","dob","data-th","className","src","medium","alt","first","last","href","target","userTable","headings","handleSort","id","width","style","onClick","toLowerCase","Search","handleSearchChange","type","placeholder","aria-label","onChange","e","Navbar","axios","get","DataArea","state","order","filteredUsers","heading","setState","sortedUsers","sort","a","b","localeCompare","event","console","log","value","filter","filteredList","item","Object","values","indexOf","API","then","results","data","this","Component","Main","Wrapper","children","Header","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e8243e3a.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../styles/DataBody.css\";\n\nfunction userData({ users }) {\n  function formatDate(date) {\n    const dateArray = date.split(\"-\");\n    const year = dateArray[0];\n    const month = dateArray[1];\n    const dayArray = dateArray[2].split(\"T\");\n    const day = dayArray[0];\n    const formattedDate = [month, day, year].join(\"-\");\n    return formattedDate;\n  }\n\n  return (\n    <tbody>\n      {users[0] !== undefined && users[0].name !== undefined ? (\n        users.map(\n          ({ userName, name, picture, phone, email, dob }) => {\n            return (\n              <tr key={userName}>\n                <td data-th=\"Image\" className=\"align-middle\">\n                  <img\n                    src={picture.medium}\n                    alt={\"profile picture for \" + name.first + \"\" + name.last}\n                    className=\"img-responsive\"\n                  />\n                </td>\n                <td data-th=\"Name\" className=\"name-cell align middle\">\n                  {name.first} {name.last}\n                </td>\n                <td data-th=\"Phone\" className=\"align-middle\">\n                  {phone}\n                </td>\n                <td data-th=\"Email\" className=\"align-middle\">\n                  <a href={\"email to\" + email} target=\"_blank\">\n                    {email}\n                  </a>\n                </td>\n                <td data-th=\"DOB\" className=\"align-middle\">\n                  {formatDate(dob.date)}\n                </td>\n              </tr>\n            );\n          }\n        )\n      ) : (\n        <></>\n      )}\n    </tbody>\n  );\n}\n\nexport default userData;","import React from \"react\";\nimport DataBody from \"./DataBody\";\nimport \"../styles/DataTable.css\";\n\nfunction userTable({ headings, users, handleSort }) {\n  return (\n    <div className=\"datatable mt-5\">\n      <table\n        id=\"table\"\n        className=\"table table-striped table-hover table-condensed\"\n      >\n        <thead>\n          <tr>\n            {headings.map(({ name, width }) => {\n              return (\n                <th\n                  className=\"col\"\n                  key={name}\n                  style={{ width }}\n                  onClick={() => {\n                    handleSort(name.toLowerCase());\n                  }}\n                >\n                  {name}\n                  <span className=\"pointer\"></span>\n                </th>\n              );\n            })}\n          </tr>\n        </thead>\n        <DataBody users={users} />\n      </table>\n    </div>\n  );\n}\n\nexport default userTable;\n","import React from \"react\";\nimport \"../styles/SearchBox.css\";\n\nfunction Search({ handleSearchChange }) {\n  return (\n    <div className=\"searchbox\">\n      <form className=\"form-inline\">\n        <input\n          className=\"form-control\"\n          type=\"search\"\n          placeholder=\"Search\"\n          aria-label=\"Search\"\n          onChange={(e) => handleSearchChange(e)}\n        />\n      </form>\n    </div>\n  );\n}\n\nexport default Search;\n","import React from \"react\";\nimport SearchBox from \"./SearchBox.js\";\nimport \"../styles/Nav.css\";\n\nfunction Navbar({ handleSearchChange }) {\n  return (\n    <nav className=\"navbar navbar-expand navbar-light bg-light\">\n      <div className=\"navbar-collapse row\" id=\"navbarNav\">\n        <SearchBox handleSearchChange={handleSearchChange} />\n      </div>\n    </nav>\n  );\n}\nexport default Navbar;","import axios from \"axios\";\n\nexport default {\n  // Gets all users\n  getUsers: function() {\n    return axios.get(\"https://randomuser.me/api/?results=200&nat=us\");\n  }\n};\n","import React, { Component } from \"react\";\nimport DataTable from \"./DataTable\";\nimport Nav from \"./Nav\";\nimport API from \"../utils/API\";\nimport \"../styles/DataArea.css\";\n\nexport default class DataArea extends Component{\n    state={\n        users: [{}],\n        order: \"descend\",\n        filteredUsers: [{}]\n    }\n    headings = [\n        { name: \"Image\", width: \"10%\" },\n        { name: \"Name\", width: \"10%\" },\n        { name: \"Phone\", width: \"20%\" },\n        { name: \"Email\", width: \"20%\" },\n        { name: \"DOB\", width: \"10%\" }\n      ]\n\n      handleSort= heading => {\n          if(this.state.order===\"descend\"){\n              this.setState({\n                  order: \"ascend\"\n              })\n          }else{\n              this.setState({\n                  order: \"descend\"\n              })\n          }\n\n          const compareUser=(a, b)=>{\n\n            if (this.state.order === \"ascend\") {\n                // account for missing values\n                if (a[heading] === undefined) {\n                  return 1;\n                } else if (b[heading] === undefined) {\n                  return -1;\n                }\n                // numerically\n                else if (heading === \"name\") {\n                  return a[heading].first.localeCompare(b[heading].first);\n                } else {\n                  return a[heading] - b[heading];\n                }\n              } else {\n                // account for missing values\n                if (a[heading] === undefined) {\n                  return 1;\n                } else if (b[heading] === undefined) {\n                  return -1;\n                }\n                // numerically\n                else if (heading === \"name\") {\n                  return b[heading].first.localeCompare(a[heading].first);\n                } else {\n                  return b[heading] - a[heading];\n                }\n              }\n        \n            }\n            const sortedUsers = this.state.filteredUsers.sort(compareUser);\n            this.setState({ filteredUsers: sortedUsers });\n          }\n        \n          handleSearchChange = event => {\n            console.log(event.target.value);\n            const filter = event.target.value;\n            const filteredList = this.state.users.filter(item => {\n              // merge data together, then see if user input is anywhere inside\n              let values = Object.values(item)\n                .join(\"\")\n                .toLowerCase();\n              return values.indexOf(filter.toLowerCase()) !== -1;\n            });\n            this.setState({ filteredUsers: filteredList });\n          }\n        \n          componentDidMount() {\n            API.getUsers().then(results => {\n              this.setState({\n                users: results.data.results,\n                filteredUsers: results.data.results\n              });\n            });\n          }\n        \n          render() {\n            return (\n              <>\n                <Nav handleSearchChange={this.handleSearchChange} />\n                <div className=\"data-area\">\n                  <DataTable\n                    headings={this.headings}\n                    users={this.state.filteredUsers}\n                    handleSort={this.handleSort}\n                  />\n                </div>\n              </>\n            );\n          }\n        }\n        ","import React, { Component } from \"react\";\nimport DataArea from \"./DataArea\";\n\nimport \"../styles/Main.css\";\n\nexport default class Main extends Component {\n  render() {\n    return (\n      <>\n        <DataArea />\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport \"../styles/Wrapper.css\";\n\nfunction Wrapper({ children }) {\n  return (\n      <div className=\"wrapper\">\n      {children}\n      </div>\n    );\n}\n\nexport default Wrapper;\n","import React, { Component } from \"react\";\nimport \"../styles/Header.css\";\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <div className=\"header\">\n        <h1>Employees</h1>\n        <p>Click to filter by heading or use the search bar</p>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Main from \"./components/Main\";\nimport Wrapper from \"./components/Wrapper\";\nimport Header from \"./components/Header\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Wrapper>\n        <Header />\n        <Main />\n      </Wrapper>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(<App/>, document.getElementById ('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}